{"version":3,"sources":["components/Header.tsx","helpers/api.tsx","components/PersonName.tsx","components/PersonRow.tsx","components/PeopleTable.tsx","App.tsx","index.tsx"],"names":["Header","className","to","exact","activeClassName","getPeople","a","fetch","response","json","people","PersonName","name","slug","sex","cn","male","female","PersonRow","person","id","born","died","motherName","fatherName","mother","father","key","PeopleTable","useState","setPeople","useEffect","then","data","map","index","find","m","f","motherSlug","fatherSlug","title","App","path","render","component","from","ReactDOM","document","getElementById"],"mappings":"kPAGaA,EAAS,WACpB,OACE,yBAAKC,UAAU,OACb,wBAAIA,UAAU,aACZ,wBAAIA,UAAU,aACZ,kBAAC,IAAD,CAASC,GAAG,IAAIC,OAAK,EAACF,UAAU,YAAYG,gBAAgB,qBAA5D,SAIF,wBAAIH,UAAU,aACZ,kBAAC,IAAD,CAASC,GAAG,UAAUD,UAAU,YAAYG,gBAAgB,qBAA5D,c,yCCXGC,EAAS,uCAAG,8BAAAC,EAAA,sEACAC,MAHT,qEAES,cACjBC,EADiB,gBAEFA,EAASC,OAFP,cAEjBC,EAFiB,yBAIhBA,GAJgB,2CAAH,qD,iBCQTC,EAAuC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IACjE,OACE,kBAAC,IAAD,CACEb,UAAWc,IAAG,GAAD,OACRF,GACH,CAAEG,KAAc,MAARF,GACR,CAAEG,OAAgB,MAARH,IAEZZ,GAAE,kBAAaW,IAEdD,ICZMM,EAAuC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEnDC,EAUED,EAVFC,GACAR,EASEO,EATFP,KACAE,EAQEK,EARFL,IACAO,EAOEF,EAPFE,KACAC,EAMEH,EANFG,KACAC,EAKEJ,EALFI,WACAC,EAIEL,EAJFK,WACAC,EAGEN,EAHFM,OACAC,EAEEP,EAFFO,OACAb,EACEM,EADFN,KAGF,OACE,wBAAIc,IAAKP,GACP,4BAAKA,GACL,4BACE,kBAAC,EAAD,CAAYN,IAAKA,EAAKF,KAAMA,EAAMC,KAAMA,KAE1C,4BAAKC,GACL,4BAAKO,GACL,4BAAKC,GACL,4BACGG,EACC,kBAAC,EAAD,CAAYX,IAAI,IAAIF,KAAMW,EAAYV,KAAMY,EAAOZ,OAChD,8BAAOU,IAGd,4BACGG,EACC,kBAAC,EAAD,CAAYZ,IAAI,IAAIF,KAAMY,EAAYX,KAAMa,EAAOb,OAChD,8BAAOW,MChCPI,EAA+B,WAC1C,IADgD,EAWpBC,mBAAuB,IAXH,mBAWzCnB,EAXyC,KAWjCoB,EAXiC,KA8BhD,OAjBAC,qBAAU,WACR1B,IACG2B,MAAK,SAAAC,GAAI,OAAIH,EACZG,EAAKC,KAAI,SAACf,EAA2BgB,GACnC,IAAMV,EAASQ,EAAKG,MAAK,SAAAC,GAAC,OAAIA,EAAEzB,OAASO,EAAOI,cAC1CG,EAASO,EAAKG,MAAK,SAAAE,GAAC,OAAIA,EAAE1B,OAASO,EAAOK,cAEhD,OAAO,2BACFL,GADL,IAEEC,GAAIe,EAAQ,EACZI,YAAkB,OAANd,QAAM,IAANA,OAAA,EAAAA,EAAQZ,OAAQM,EAAOI,WACnCiB,YAAkB,OAANd,QAAM,IAANA,OAAA,EAAAA,EAAQb,OAAQM,EAAOK,sBAI1C,IAGD,2BAAOvB,UAAU,wBACf,+BACE,4BAhCS,CACb,KACA,OACA,MACA,OACA,OACA,SACA,UA0BciC,KAAI,SAACO,GAAD,OACV,wBAAId,IAAKc,GACNA,QAKT,+BACG/B,EAAOwB,KAAI,SAACf,GAAD,OACV,kBAAC,EAAD,CAAWA,OAAQA,EAAQQ,IAAKR,EAAON,aC1BlC6B,G,MAhBH,WACV,OACE,yBAAKzC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0C,KAAK,IAAIxC,OAAK,EAACyC,OAAQ,kBAAM,uCACpC,kBAAC,IAAD,CAAOD,KAAK,UAAUE,UAAWjB,IACjC,kBAAC,IAAD,CAAUkB,KAAK,QAAQ5C,GAAG,MAC1B,kBAAC,IAAD,KACE,mDCZV6C,IAASH,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.343b3c31.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport React from 'react';\n\nexport const Header = () => {\n  return (\n    <nav className=\"nav\">\n      <ul className=\"nav__list\">\n        <li className=\"nav__item\">\n          <NavLink to=\"/\" exact className=\"nav__link\" activeClassName=\"nav__link--active\">\n            Home\n          </NavLink>\n        </li>\n        <li className=\"nav__item\">\n          <NavLink to=\"/people\" className=\"nav__link\" activeClassName=\"nav__link--active\">\n            People\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async (): Promise<PersonType[]> => {\n  const response = await fetch(API_URL);\n  const people = await response.json();\n\n  return people;\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\n\ntype PersonNameType = {\n  name: string;\n  slug: string;\n  sex: string;\n};\n\nexport const PersonName: React.FC<PersonNameType> = ({ name, slug, sex }) => {\n  return (\n    <Link\n      className={cn(\n        `${slug}`,\n        { male: sex === 'm' },\n        { female: sex === 'f' },\n      )}\n      to={`/people/${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\n// import cn from 'classnames';\nimport { PersonName } from './PersonName';\n\ntype PersonRowProps = {\n  person: PersonWithParents;\n};\n\nexport const PersonRow: React.FC<PersonRowProps> = (({ person }) => {\n  const {\n    id,\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n    slug,\n  } = person;\n\n  return (\n    <tr key={id}>\n      <th>{id}</th>\n      <th>\n        <PersonName sex={sex} name={name} slug={slug} />\n      </th>\n      <th>{sex}</th>\n      <th>{born}</th>\n      <th>{died}</th>\n      <th>\n        {mother ? (\n          <PersonName sex=\"f\" name={motherName} slug={mother.slug} />\n        ) : (<span>{motherName}</span>)}\n\n      </th>\n      <th>\n        {father ? (\n          <PersonName sex=\"m\" name={fatherName} slug={father.slug} />\n        ) : (<span>{fatherName}</span>)}\n      </th>\n    </tr>\n  );\n});\n","import React, { useState, useEffect } from 'react';\nimport { getPeople } from '../helpers/api';\nimport { PersonRow } from './PersonRow';\n\ntype Props = {\n  people: PersonType[];\n};\n\nexport const PeopleTable: React.FC<Props> = () => {\n  const theads = [\n    'ID',\n    'Name',\n    'Sex',\n    'Born',\n    'Died',\n    'Father',\n    'Mother',\n  ];\n\n  const [people, setPeople] = useState<PersonType[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(data => setPeople(\n        data.map((person: PersonWithParents, index: number) => {\n          const mother = data.find(m => m.name === person.motherName);\n          const father = data.find(f => f.name === person.fatherName);\n\n          return {\n            ...person,\n            id: index + 1,\n            motherSlug: mother?.slug || person.motherName,\n            fatherSlug: father?.slug || person.fatherName,\n          };\n        }),\n      ));\n  }, []);\n\n  return (\n    <table className=\"people__table people\">\n      <thead>\n        <tr>\n          {theads.map((title: string) => (\n            <th key={title}>\n              {title}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {people.map((person) => (\n          <PersonRow person={person} key={person.slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { PeopleTable } from './components/PeopleTable';\n\nimport './App.scss';\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact render={() => <h1>Home</h1>} />\n        <Route path=\"/people\" component={PeopleTable} />\n        <Redirect from=\"/home\" to=\"/\" />\n        <Route>\n          <h1>Page not found</h1>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}