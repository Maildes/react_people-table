{"version":3,"sources":["components/Header.tsx","helpers/api.tsx","components/PersonName.tsx","components/PersonRow.tsx","components/PeopleTable.tsx","App.tsx","index.tsx"],"names":["Header","className","to","exact","activeClassName","getPeople","a","fetch","response","json","people","PersonName","name","slug","sex","cn","person__male","person__female","PersonRow","person","id","born","died","motherName","fatherName","mother","father","history","useHistory","personSlug","useParams","key","onClick","perSlug","push","pathname","PeopleTable","location","useLocation","searchParams","URLSearchParams","search","query","useMemo","get","sortBy","sortOrder","useState","setPeople","currentQuery","setCurrentQuery","useEffect","then","data","map","index","find","m","f","motherSlug","fatherSlug","visiblePeople","peopleCompleted","querySearch","pattern","RegExp","filter","p","test","getVisiblePeople","sort","b","localeCompare","reverse","historyPushWithDebounce","useCallback","debounce","placeholder","type","value","onChange","event","target","set","toString","title","column","src","alt","toLowerCase","App","path","render","component","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f47a86df.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport React from 'react';\n\nexport const Header = () => {\n  return (\n    <nav className=\"nav\">\n      <ul className=\"nav__list\">\n        <li className=\"nav__item\">\n          <NavLink to=\"/\" exact className=\"nav__link\" activeClassName=\"nav__link--active\">\n            Home\n          </NavLink>\n        </li>\n        <li className=\"nav__item\">\n          <NavLink to=\"/people\" className=\"nav__link\" activeClassName=\"nav__link--active\">\n            People\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async (): Promise<PersonType[]> => {\n  const response = await fetch(API_URL);\n  const people = await response.json();\n\n  return people;\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\n\ntype PersonNameType = {\n  name: string;\n  slug: string;\n  sex: string;\n};\n\nexport const PersonName: React.FC<PersonNameType> = ({ name, slug, sex }) => {\n  return (\n    <Link\n      className={cn(\n        `${slug}`,\n        { person__male: sex === 'm' },\n        { person__female: sex === 'f' },\n      )}\n      to={`/people/${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { PersonName } from './PersonName';\n\ntype PersonRowProps = {\n  person: PersonWithParents;\n};\n\nexport const PersonRow: React.FC<PersonRowProps> = (({ person }) => {\n  const {\n    id,\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n    slug,\n  } = person;\n\n  const history = useHistory();\n  const { personSlug } = useParams();\n\n\n  const handleSelectPerson = (perSlug: string) => {\n    history.push({\n      pathname: `/people/${perSlug}`,\n    });\n  };\n\n  return (\n    <tr\n      key={id}\n      className={cn('person', {\n        'person--active': person.slug === personSlug,\n      })}\n      onClick={() => handleSelectPerson(person.slug)}\n    >\n      <th>{id}</th>\n      <th>\n        <PersonName sex={sex} name={name} slug={slug} />\n      </th>\n      <th\n        className={cn({\n          person__male: person.sex === 'm',\n          person__female: person.sex === 'f',\n        })}\n      >\n        {sex}\n      </th>\n      <th>{born}</th>\n      <th>{died}</th>\n      <th className=\"person__female\">\n        {mother ? (\n          <PersonName sex=\"f\" name={motherName} slug={mother.slug} />\n        ) : (<span>{motherName}</span>)}\n\n      </th>\n      <th className=\"person__male\">\n        {father ? (\n          <PersonName sex=\"m\" name={fatherName} slug={father.slug} />\n        ) : (<span>{fatherName}</span>)}\n      </th>\n    </tr>\n  );\n});\n","import React, {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n} from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport { getPeople } from '../helpers/api';\nimport { PersonRow } from './PersonRow';\n\ntype Props = {\n  people: PersonType[];\n};\n\nexport const PeopleTable: React.FC<Props> = () => {\n  const THEADS = [\n    'id',\n    'name',\n    'sex',\n    'born',\n    'died',\n    'mother',\n    'father',\n  ];\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n\n  const query = useMemo(() => searchParams.get('query') || '', [searchParams]);\n  const sortBy = useMemo(() => searchParams.get('sortBy') || '', [searchParams]);\n  const sortOrder = useMemo(() => searchParams.get('sortOrder'), [searchParams] || '');\n\n  const [people, setPeople] = useState<PersonType[]>([]);\n  const [currentQuery, setCurrentQuery] = useState<string>(query);\n\n\n  useEffect(() => {\n    getPeople()\n      .then(data => setPeople(\n        data.map((person: PersonWithParents, index: number) => {\n          const mother = data.find(m => m.name === person.motherName);\n          const father = data.find(f => f.name === person.fatherName);\n\n          return {\n            ...person,\n            id: index + 1,\n            motherSlug: mother?.slug || person.motherName,\n            fatherSlug: father?.slug || person.fatherName,\n          };\n        }),\n      ));\n  }, []);\n\n  const getVisiblePeople = (peopleCompleted: PersonWithParents[], querySearch: string) => {\n    const pattern = new RegExp(querySearch, 'i');\n\n    return peopleCompleted\n      .filter(p => pattern.test(p.name + p.motherName + p.fatherName));\n  };\n\n  const visiblePeople = useMemo(() => {\n    return getVisiblePeople(people, query);\n  }, [query, people]);\n\n  useMemo(() => {\n    switch (sortBy) {\n      case 'id':\n      case 'born':\n      case 'died':\n        return visiblePeople.sort((a, b) => a[sortBy] - b[sortBy]);\n\n      case 'name':\n      case 'sex':\n        return visiblePeople.sort((a, b) => a[sortBy].localeCompare(b[sortBy]));\n\n      default:\n        return visiblePeople;\n    }\n  },\n  [visiblePeople, sortBy, sortOrder]);\n\n  const handlePeopleSort = (column: string) => {\n    if (column !== 'mother' && column !== 'father') {\n      if (sortBy === column && sortOrder === 'asc') {\n        searchParams.set('sortOrder', 'desc');\n      } else {\n        searchParams.set('sortOrder', 'asc');\n      }\n\n      searchParams.set('sortBy', column);\n      history.push({\n        search: searchParams.toString(),\n      });\n    }\n  };\n\n  useMemo(() => {\n    return sortOrder === 'desc' ? visiblePeople.reverse() : visiblePeople;\n  }, [visiblePeople, sortOrder]);\n\n  const historyPushWithDebounce = useCallback(debounce(history.push, 500), []);\n\n  const handleSearchChange = (event: { target: { value: string }}) => {\n    setCurrentQuery(event.target.value);\n    searchParams.set('query', event.target.value);\n    historyPushWithDebounce({\n      search: searchParams.toString(),\n    });\n  };\n\n  useEffect(() => {\n    setCurrentQuery(query);\n  }, [query]);\n\n  return (\n    <div className=\"container\">\n      <input\n        className=\"table__search\"\n        placeholder=\"Find person\"\n        type=\"text\"\n        value={currentQuery}\n        onChange={handleSearchChange}\n      />\n      <table className=\"PeopleTable people\">\n        <thead>\n          <tr className=\"people__header\">\n            {THEADS.map((title: string) => (\n              <th\n                key={title}\n                onClick={() => handlePeopleSort(title)}\n              >\n                {title}\n                {sortOrder === 'asc' && title === sortBy\n                && (\n                  <img className=\"sortFlag\" src=\"./images/sort-down.svg\" alt=\"sort_icon\" />\n                )}\n                {sortOrder === 'desc' && title.toLowerCase() === sortBy\n                && (\n                  <img className=\"sortFlag\" src=\"./images/sort-up.svg\" alt=\"sort_icon\" />\n                )}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {visiblePeople.map((person) => (\n            <PersonRow person={person} key={person.slug} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { PeopleTable } from './components/PeopleTable';\n\nimport './App.scss';\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact render={() => <h1>Home</h1>} />\n        <Route path=\"/people/:personSlug?\" component={PeopleTable} />\n        <Redirect from=\"/home\" to=\"/\" />\n        <Route>\n          <h1>Page not found</h1>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}